#place where test the api with the help of http request

### TEST USER API

### Test login successfully with valid credentials
POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "mario@test.it",
    "password": "pwd"
}

### Test fail login with invalid credentials
POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "invalidUser",
    "password": "invalidPassword"
}

### Test logout successfully
POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "marco@test.it",
    "password": "pwd"
}

DELETE http://localhost:3001/api/sessions/current

### Test checking current session when authenticated
POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "mario@test.it",
    "password": "pwd"
}

GET http://localhost:3001/api/sessions/current

### Test checking current session when not authenticated
DELETE http://localhost:3001/api/sessions/current

GET http://localhost:3001/api/sessions/current


### TEST DOCUMENT API

### test insertion of document if urban planner

POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "mario@test.it",
    "password": "pwd"
}

POST http://localhost:3001/api/documents
Content-Type: application/json

{
    "title": "Sample Document",
    "idStakeholder": 1,
    "scale": "National",
    "issuance_Date": "04/2019",
    "language": "English",
    "pages": 50,
    "description": "Description of the document.",
    "idtype": 2,
    "locationType": "Point",
    "latitude": 67.85,
    "longitude": 20.22,
    "areaCoordinates": ""
}

### test insertion of document if not authenticated or not urban planner


DELETE http://localhost:3001/api/sessions/current

###
POST http://localhost:3001/api/documents
Content-Type: application/json

{
    "title": "Sample Document",
    "idStakeholder": 1,
    "scale": "National",
    "issuance_Date": "04/2019",
    "language": "English",
    "pages": 50,
    "description": "Description of the document.",
    "idtype": 2,

}

# 401 Unauthorized
# {
#    "error": "Not authenticated"
# }

### test insertion of document if urban planner but some field not present

POST http://localhost:3001/api/sessions
Content-Type: application/json

{
    "username": "mario@test.it",
    "password": "pwd"
}

POST http://localhost:3001/api/documents
Content-Type: application/json

{
    "scale": "National",
    "issuance_Date": "04/2019",
    "language": "English",
    "pages": 50,
    "description": "Description of the document.",
    "idtype": 2,
    
}

# 400 Bad Request
# {
#   "error": "The request body must contain all the fields"
# }

### test the update of a document if urban planner


### test the get of all documents
GET http://localhost:3001/api/documents

### test the get of a document by id
GET http://localhost:3001/api/documents/1

### test the get of a document by id if id is not present
GET http://localhost:3001/api/documents/100
# 404 Not Found
# {
#   "error": "Document not found
# }



### test to get all documents to be done

### Test to get all types
GET http://localhost:3001/api/types

### Test to get a type by id
GET http://localhost:3001/api/types/1

### test to get all stakeholder

GET http://localhost:3001/api/stakeholders

### Test to get a stakeholder by id
GET http://localhost:3001/api/stakeholders/1

### Test to get all connection type
GET http://localhost:3001/api/connections

### TEST DOCUMENT CONNECTION API

### test to create a new connection between two documents
POST http://localhost:3001/api/document-connections
Content-Type: application/json

{
    "IdDocument1": 1,
    "IdDocument2": 2,
    "IdConnection": 1
}

### test to create a new connection between two documents
POST http://localhost:3001/api/document-connections
Content-Type: application/json

{
    "IdDocument1": 4,
    "IdDocument2": 2,
    "IdConnection": 3
}

### test to update a connection between two documents
PATCH  http://localhost:3001/api/documents/1/connection
Content-Type: application/json

{
    "IdDocument1": 1,
    "IdDocument2": 2,
    "IdConnection": 2
}

### test to get all document-connections
GET http://localhost:3001/api/document-connections

### test to get all document-connections of a document id
GET http://localhost:3001/api/document-connections/1

### TEST LOCATION API
GET http://localhost:3001/api/locations

GET http://localhost:3001/api/locations/1

POST http://localhost:3001/api/locations
Content-Type: application/json

{
    "locationType": "Point",
    "latitude": 67.85,
    "longitude": 20.22,
    "areaCoordinates": ""
}

POST http://localhost:3001/api/locations
Content-Type: application/json

{
    "latitude": 45.0,
    "longitude": 9.0,
    "areaCoordinates": ""
}

# 400 Bad Request
# {
#  "error":  "locationType is required."
# }

POST http://localhost:3001/api/locations
Content-Type: application/json

{
    "locationType": "Point",
    "areaCoordinates": ""
}

# 400 Bad Request
# {
#  "error":  "For 'Point' locationType, both latitude and longitude are required."
# }

POST http://localhost:3001/api/locations
Content-Type: application/json

{
    "locationType": "Area",
    "latitude": 45.0,
    "longitude": 9.0
}

# 400 Bad Request
# {
#  "error":  "For For 'Area' locationType, areaCoordinates are required."
# }




PATCH http://localhost:3001/api/locations/1
Content-Type: application/json

{
    "locationType": "Point",
    "latitude": 30.0,
    "longitude": 9.0,
    "areaCoordinates": ""
}

# 200 OK
# {
#  "error":  "Location updated successfully."
# }


PATCH http://localhost:3001/api/locations/2
Content-Type: application/json

{
    "locationType": "Point",
    "latitude": 30.0,
    "longitude": 9.0,
    "areaCoordinates": ""
}

# 404 NOT FOUND 
# {
#  "error":  "Location not found"
# }

PATCH http://localhost:3001/api/locations/1
Content-Type: application/json

{
    "locationType": "Point",
    "areaCoordinates": ""
}

# 400 BAD REQUEST 
# {
#  "error":  "For 'Point' locationType, both latitude and longitude are required."
# }

PATCH http://localhost:3001/api/locations/1
Content-Type: application/json

{
 
    "locationType": "Area",
    "latitude": 30.0,
    "longitude": 9.0,
    
}

# 400 BAD REQUEST 
# {
#  "error":  "For For 'Area' locationType, areaCoordinates are required."
# }


PATCH http://localhost:3001/api/locations/1
Content-Type: application/json

{
 
    "latitude": 30.0,
    "longitude": 9.0,
    "areaCoordinates": ""
}

# 400 BAD REQUEST 
# {
#  "error":  "locationType is required."
# }

PATCH http://localhost:3001/api/locations/2
Content-Type: application/json

{
    "locationType": "Point",
    "latitude": 30.0,
    "longitude": 9.0,
    "areaCoordinates": ""
}

# 404 NOT FOUND 
# {
#  "error":  "Location not found"
# }

